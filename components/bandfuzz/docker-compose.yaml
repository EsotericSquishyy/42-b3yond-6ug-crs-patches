# docker-compose.yaml

volumes:
  crs_volume:
    driver: local
    driver_opts:
      type: none
      device: /crs
      o: bind

services:
  b3compile:
    profiles:
      - container
    build:
      context: .
      dockerfile: deployments/b3compile.Dockerfile
    privileged: true
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      REDIS_SENTINEL_HOSTS: "dummy"
      REDIS_MASTER: "dummy"
      OVERRIDE_REDIS_URL: redis://redis:6379
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaegertracing:4317
      LOG_LEVEL: debug
      SCHEDULER_TASKS_PER_BATCH: 1
      SCHEDULER_INTERVAL: 30s
      CORE_COUNT: 2
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - crs_volume:/crs
  b3fuzz:
    profiles:
      - container
    build:
      context: .
      dockerfile: deployments/b3fuzz.Dockerfile
    privileged: true
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      REDIS_SENTINEL_HOSTS: "dummy"
      REDIS_MASTER: "dummy"
      OVERRIDE_REDIS_URL: redis://redis:6379
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaegertracing:4317
      LOG_LEVEL: debug
      SCHEDULER_TASKS_PER_BATCH: 1
      SCHEDULER_INTERVAL: 30s
      CORE_COUNT: 2
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaegertracing:
        condition: service_healthy
    volumes:
      - crs_volume:/crs
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
  jaegertracing:
    image: jaegertracing/all-in-one:1.53
    container_name: jaegertracing
    ports:
      - "16686:16686"   # Jaeger web UI
      - "4317:4317"     # OTLP gRPC receiver
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:16686"]
      interval: 5s
      timeout: 5s
      retries: 5
