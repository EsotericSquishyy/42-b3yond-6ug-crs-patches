# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import seedd_pb2 as seedd__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in seedd_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SeedDStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunSeeds = channel.unary_unary(
                '/SeedD.SeedD/RunSeeds',
                request_serializer=seedd__pb2.RunSeedsRequest.SerializeToString,
                response_deserializer=seedd__pb2.RunSeedsResponse.FromString,
                _registered_method=True)
        self.GetMergedCoverage = channel.unary_unary(
                '/SeedD.SeedD/GetMergedCoverage',
                request_serializer=seedd__pb2.GetMergedCoverageRequest.SerializeToString,
                response_deserializer=seedd__pb2.RunSeedsResponse.FromString,
                _registered_method=True)
        self.GetRegionSource = channel.unary_unary(
                '/SeedD.SeedD/GetRegionSource',
                request_serializer=seedd__pb2.GetRegionSourceRequest.SerializeToString,
                response_deserializer=seedd__pb2.GetRegionSourceResponse.FromString,
                _registered_method=True)
        self.ExtractFunctionSource = channel.unary_unary(
                '/SeedD.SeedD/ExtractFunctionSource',
                request_serializer=seedd__pb2.ExtractFunctionSourceRequest.SerializeToString,
                response_deserializer=seedd__pb2.ExtractFunctionSourceResponse.FromString,
                _registered_method=True)
        self.GetCallGraph = channel.unary_unary(
                '/SeedD.SeedD/GetCallGraph',
                request_serializer=seedd__pb2.GetCallGraphRequest.SerializeToString,
                response_deserializer=seedd__pb2.GetCallGraphResponse.FromString,
                _registered_method=True)
        self.GetFunctions = channel.unary_unary(
                '/SeedD.SeedD/GetFunctions',
                request_serializer=seedd__pb2.GetFunctionsRequest.SerializeToString,
                response_deserializer=seedd__pb2.GetFunctionsResponse.FromString,
                _registered_method=True)


class SeedDServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunSeeds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMergedCoverage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegionSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractFunctionSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCallGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFunctions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SeedDServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunSeeds': grpc.unary_unary_rpc_method_handler(
                    servicer.RunSeeds,
                    request_deserializer=seedd__pb2.RunSeedsRequest.FromString,
                    response_serializer=seedd__pb2.RunSeedsResponse.SerializeToString,
            ),
            'GetMergedCoverage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMergedCoverage,
                    request_deserializer=seedd__pb2.GetMergedCoverageRequest.FromString,
                    response_serializer=seedd__pb2.RunSeedsResponse.SerializeToString,
            ),
            'GetRegionSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegionSource,
                    request_deserializer=seedd__pb2.GetRegionSourceRequest.FromString,
                    response_serializer=seedd__pb2.GetRegionSourceResponse.SerializeToString,
            ),
            'ExtractFunctionSource': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractFunctionSource,
                    request_deserializer=seedd__pb2.ExtractFunctionSourceRequest.FromString,
                    response_serializer=seedd__pb2.ExtractFunctionSourceResponse.SerializeToString,
            ),
            'GetCallGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCallGraph,
                    request_deserializer=seedd__pb2.GetCallGraphRequest.FromString,
                    response_serializer=seedd__pb2.GetCallGraphResponse.SerializeToString,
            ),
            'GetFunctions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFunctions,
                    request_deserializer=seedd__pb2.GetFunctionsRequest.FromString,
                    response_serializer=seedd__pb2.GetFunctionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SeedD.SeedD', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('SeedD.SeedD', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SeedD(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunSeeds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/RunSeeds',
            seedd__pb2.RunSeedsRequest.SerializeToString,
            seedd__pb2.RunSeedsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMergedCoverage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/GetMergedCoverage',
            seedd__pb2.GetMergedCoverageRequest.SerializeToString,
            seedd__pb2.RunSeedsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRegionSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/GetRegionSource',
            seedd__pb2.GetRegionSourceRequest.SerializeToString,
            seedd__pb2.GetRegionSourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExtractFunctionSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/ExtractFunctionSource',
            seedd__pb2.ExtractFunctionSourceRequest.SerializeToString,
            seedd__pb2.ExtractFunctionSourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCallGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/GetCallGraph',
            seedd__pb2.GetCallGraphRequest.SerializeToString,
            seedd__pb2.GetCallGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFunctions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SeedD.SeedD/GetFunctions',
            seedd__pb2.GetFunctionsRequest.SerializeToString,
            seedd__pb2.GetFunctionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
