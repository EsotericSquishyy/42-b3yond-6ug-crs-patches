apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: {{ include "b3yond.names.fullname" . }}
  labels: {{- include "b3yond.labels.standard" . | nindent 4 }}
spec:
  pollingInterval: 60
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  maxReplicaCount: 8
  jobTargetRef:
    ttlSecondsAfterFinished: 300
    template:
      metadata:
        labels: {{- include "b3yond.labels.standard" . | nindent 10 }}
      spec:
        restartPolicy: OnFailure
        tolerations: {{- include "b3yond.tolerations" . | nindent 10 }}
        affinity:
          nodeAffinity: {{- include "b3yond.affinities.nodes" . | nindent 12 }}
          podAntiAffinity: {{- include "b3yond.affinities.pods.isolated" . | nindent 12 }}
        initContainers: {{- include "b3yond.initContainers.waitForScheduler" . | nindent 10 }}
        containers:
          - name: directed
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: Always
            securityContext:
              privileged: true
              capabilities:
                add: ["SYS_ADMIN"]
            resources:
              requests:
                cpu: {{ .Values.global.resources.requests.cpu }}
            env:
              - name: RABBITMQ_URL
                value: 'amqp://{{ .Values.global.rabbitmq.auth.username }}:{{ .Values.global.rabbitmq.auth.password }}@{{ include "crs.rabbitmq.fullname" . }}:5672/'
              - name: DATABASE_URL
                value: {{ .Values.global.database.connectionString }}
              - name: REDIS_SENTINEL_HOSTS
                value: "{{ include "crs.redis-headless.fullname" . }}:26379"
              - name: REDIS_MASTER
                value: "mymaster"
              - name: OTEL_EXPORTER_OTLP_ENDPOINT
                value: '{{ .Values.global.otel.endpoint }}'
              - name: OTEL_EXPORTER_OTLP_HEADERS
                value: '{{ .Values.global.otel.headers }}'
              - name: OTEL_EXPORTER_OTLP_PROTOCOL
                value: '{{ .Values.global.otel.protocol }}'
              - name: SLICE_TASK_QUEUE
                value: slice-task
              - name: SLICE_TASK_QUEUE_R18
                value: slice-task-18
              - name: CRS_DIRECTED_QUEUE
                value: directed_fuzzing_queue
              - name: STORAGE_DIR
                value: /crs
              - name: AIXCC_AFL_SLAVE_NUM
                value: "{{ .Values.core_count }}"
            volumeMounts:
              - name: crs-fileshare
                mountPath: /crs
        volumes:
          - name: crs-fileshare
            persistentVolumeClaim:
              claimName: {{ .Values.global.pvc.name }}
        imagePullSecrets:
          - name: {{ .Values.secret }}
  triggers:
  - type: metrics-api
    metadata:
      targetValue: "1"
      url: "http://{{ .Values.global.serviceName.scheduler }}.{{ .Release.Namespace }}.svc.cluster.local:8080/queue?queue=directed_fuzzing_queue"
      valueLocation: 'length'
