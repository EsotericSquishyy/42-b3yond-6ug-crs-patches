apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mock.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mock.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mock.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      role: mock
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mock.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        role: mock
        b3yond.org/anti-affinity-group: utilities
    spec:
      tolerations:
        - key: "b3yond.org/role"
          operator: "Equal"
          value: "user"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: b3yond.org/role
                operator: In
                values:
                - user
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: b3yond.org/anti-affinity-group
                    operator: In
                    values:
                      - isolated
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: b3yond.org/anti-affinity-group
                      operator: In
                      values:
                        - utilities
                topologyKey: kubernetes.io/hostname
      containers:
        - name: mock
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          env:
            - name: SAVE_DIR
              value: '/crs/mock'
            - name: MOCK_USER
              value: {{ .Values.global.competition.apiUser }}
            - name: MOCK_PASSWORD
              value: {{ .Values.global.competition.apiKey }}
          volumeMounts:
            - name: crs-fileshare
              mountPath: /crs
          ports:
            - containerPort: 8080
      volumes:
        - name: crs-fileshare
          persistentVolumeClaim:
            claimName: {{ .Values.global.pvc.name }}
      imagePullSecrets:
        - name: {{ .Values.secret }}
